---
import NavigationBar from "@/components/navbar/Navbar.astro";
import { NavigationBar as MobileNav } from "@/components/navbar/NavbarMobile.tsx";

interface Props {
  currentPage: string;
  seperator?: boolean;
  hidden?: boolean;
}

const { currentPage, seperator = true, hidden = false } = Astro.props;

// Define menu items in a single array to ensure consistency
const menuItems = [
  { href: "/", label: "Home", active: currentPage === "home" },
  {
    href: "/prices-and-bundles",
    label: "Prices and Bundles",
    active: currentPage === "prices",
  },
  {
    href: "/portfolio",
    label: "Portfolio",
    active: currentPage === "portfolio",
  },
  { href: "/#gallery", label: "Gallery", active: false },
  { href: "/faq", label: "FAQ", active: currentPage === "faq" },
  { href: "/my-music", label: "My Music", active: currentPage === "music" },
  { href: "/about-me", label: "About Me", active: currentPage === "about-me" },
  { href: "/contact", label: "Contact", active: currentPage === "contact" },
];

const headerTags = {
  hideable: hidden,
};
---

<header class={`grow-0 ${hidden ? "invisible" : ""}`} {...headerTags}>
  <nav
    class="p-4 w-full flex gap-2 items-center fixed top-0 left-0 right-0 z-50 transition-all duration-300 bg-transparent"
    id="navbar_container"
  >
    <NavigationBar menuItems={menuItems} />
    <MobileNav menuItems={menuItems} client:load />
  </nav>

  <script>
    const headerBar = document.querySelector("header[hideable='true']");
    const navbar = document.querySelector("nav#navbar_container");
    const scrolledClasses = ["bg-black/80", "backdrop-blur-md"];
    const notScrolledClasses = ["bg-transparent"];

    function updateScroll() {
      const scrolled = window.scrollY > 50;
      navbar.classList.add(
        ...(scrolled ? scrolledClasses : notScrolledClasses),
      );
      navbar.classList.remove(
        ...(scrolled ? notScrolledClasses : scrolledClasses),
      );
    }

    window.addEventListener("scroll", updateScroll);
    updateScroll();

    // if user navigates to page and dident land on it
    import { studioNavigated } from "@/layouts/hideBarMusic.ts";
    studioNavigated.subscribe((value) => {
      if (value) {
        headerBar?.classList.remove("invisible");
      }
    });
  </script>

  {/* Black Bar - Added extra top padding to account for fixed navbar */}
  <div
    class={`w-full ${seperator ? "bg-black" : "bg-inherit"} h-2 relative z-10 mt-[72px]`}
  >
  </div>
</header>
